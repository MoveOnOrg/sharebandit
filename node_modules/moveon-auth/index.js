var _ = require('lodash');
var querystring = require('querystring');
var google = require('googleapis');
var plus = google.plus('v1');

var moveonAuth = function(params) {
  var self = {
    oauth2Client: params.oauth2Client,
    redirect: function(res, action) {
      res.redirect("/auth/google?action=" + querystring.escape(action));
    }
  };
  if (params.users) {
    self.users = params.users;
    self.confirm = function(req, res, next) {
      if (!req.session.oauth_access_token) {
        self.redirect(res, req.originalUrl);
    		return;
    	}
      plus.people.get({ userId: 'me', auth: self.oauth2Client }, function(err, response) {
        if (!response) {
          self.redirect(res, req.originalUrl);
          return;
        }
        var validEmails = response.emails.filter(function(email) {
          if (email.type != 'account') {
            return false;
          }
          return _.contains(self.users, email);
        });
        if (validEmails.length < 1) {
          self.redirect(res, req.originalUrl);
          return;
        }
        next();
      });
    };
  }
  else {
    self.confirm = function(req, res, next) {
      if (!req.session.oauth_access_token) {
        self.redirect(res, req.originalUrl);
    		return;
    	}
      plus.people.get({ userId: 'me', auth: self.oauth2Client }, function(err, response) {
        if (!response) {
          self.redirect(res, req.originalUrl);
          return;
        }
        var validEmails = response.emails.filter(function(email) {
          if (email.type != 'account') {
            return false;
          }
          return _.endsWith(email.value, '@moveon.org');
        });
        if (validEmails.length < 1) {
          self.redirect(res, req.originalUrl);
          return;
        }
        next();
      });
    };
  }
  return self;
};

module.exports = moveonAuth;
