var _ = require('lodash');
var querystring = require('querystring');
var google = require('googleapis');
var plus = google.plus('v1');
var url = require('url');

var moveonAuth = function(params) {
  var self = {
    oauth2Client: params.oauth2Client,
    redirect: function(res, action) {
      res.redirect("/auth/google?action=" + querystring.escape(action));
    }
  };

  // Auth.
  params.app.get('/auth/google', function (req, res) {
    var authUrl = self.oauth2Client.generateAuthUrl({
      scope: [
        'https://www.googleapis.com/auth/userinfo.email',
      ]
    });
    var query = url.parse(req.url, true).query;
    if (query.action) {
      req.session.action = query.action;
    }
    res.redirect(authUrl + '&approval_prompt=force');
  });

  params.app.get('/auth/google/callback', function (req, res) {
    var query = url.parse(req.url, true).query;
    if (query.code) {
      self.oauth2Client.getToken(query.code, function(err, tokens) {
        if (!err) {
          self.oauth2Client.setCredentials(tokens);
          req.session.oauth_access_token = tokens;
        }
        if (req.session.action) {
          res.redirect(req.session.action);
        }
        else {
          return res.redirect('/');
        }
      });
    }
  });

  // Logout.
  params.app.get('/logout',
    function (req, res) {
      req.session.oauth_access_token = null;
      res.redirect("/");
    }
  );

  if (params.users) {
    // If users were passed, check current user is among them.
    self.users = params.users;
    self.confirm = function(req, res, next) {
      if (!req.session.oauth_access_token) {
        self.redirect(res, req.originalUrl);
    		return;
    	}
      plus.people.get({ userId: 'me', auth: self.oauth2Client }, function(err, response) {
        if (!response) {
          self.redirect(res, req.originalUrl);
          return;
        }
        var validEmails = response.emails.filter(function(email) {
          if (email.type != 'account') {
            return false;
          }
          return _.contains(self.users, email);
        });
        if (validEmails.length < 1) {
          self.redirect(res, req.originalUrl);
          return;
        }
        next();
      });
    };
  }
  else if (params.domain) {
    // If domain was passed, check current user is in that domain.
    self.domain = params.domain;
    self.confirm = function(req, res, next) {
      if (!req.session.oauth_access_token) {
        self.redirect(res, req.originalUrl);
    		return;
    	}
      plus.people.get({ userId: 'me', auth: self.oauth2Client }, function(err, response) {
        if (!response) {
          self.redirect(res, req.originalUrl);
          return;
        }
        var validEmails = response.emails.filter(function(email) {
          if (email.type != 'account') {
            return false;
          }
          return _.endsWith(email.value, '@' + self.domain);
        });
        if (validEmails.length < 1) {
          self.redirect(res, req.originalUrl);
          return;
        }
        next();
      });
    };
  }
  else {
    // If no users or domain were passed, just approve everything.
    self.confirm = function(req, res, next) {
      next();
    }
  }
  return self;
};

module.exports = moveonAuth;
