{
  "name": "sharebandit",
  "version": "0.8.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/istanbul test node_modules/.bin/_mocha -- tests/index.js"
  },
  "author": "",
  "license": "GPLv2+",
  "devDependencies": {
    "bluebird": "^3.5.0",
    "expect.js": "^0.3.1",
    "express": "^4.13.4",
    "istanbul": "^0.4.3",
    "mocha": "^2.4.5",
    "request": "^2.81.0",
    "sequelize": "^3.30.2",
    "sqlite3": "^3.1.2",
    "swig": "^1.4.2"
  },
  "dependencies": {
    "body-parser": "^1.15.0",
    "express-session": "^1.13.0",
    "googleapis": "^2.1.7",
    "html-metadata": "^1.6.3",
    "jquery": "^3.2.1",
    "jsdom": "^8.3.1",
    "lodash": "^4.17.4",
    "pg": "^4.4.6",
    "probability-distributions": "^0.8.5",
    "sequelize": "^3.30.2"
  },
  "config": {
    "s3BucketName": "sharebandit-lambda-uswest1",
    "region": "us-west-1",
    "cloudFormationStackName": "SharebanditLambdaProdStack",
    "functionName": "SharebanditLambdaProd",
    "accountId": "756917843633"
  },
  "scripts": {
    "start": "node index.js",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
  }
}
